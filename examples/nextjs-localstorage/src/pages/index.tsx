import Head from "next/head";
import { Header, Hero, Products } from 'examples-ui';
import type { Product } from 'examples-ui'
import { useCallback, useEffect, useState } from "react";

const PRODUCT_LIST = [
  { id: 1, name: 'Basement Cap', image: { src: '/cap.webp', alt: 'Basement cap' }, price: 19.99 },
  { id: 2, name: 'Basement Shirt', image: { src: '/shirt.webp', alt: 'Basement shirt' }, price: 39.99 },
  { id: 3, name: 'Basement Hoodie', image: { src: '/hoodie.webp', alt: 'Basement hoodie' }, price: 49.99 }
]

export default function Home() {
  const [cart, setCart] = useState<Product[]>([]);

  useEffect(() => {
    try {
      const localStorageProducts = JSON.parse(localStorage.getItem('cart') || '[]');
      
      if (!Array.isArray(localStorageProducts)) {
        localStorage.setItem('cart', JSON.stringify([]));
        setCart([])
        return;
      }
  
      setCart(localStorageProducts)
    } catch (error) {
      localStorage.setItem('cart', JSON.stringify([]));
      setCart([])
    }
  }, [])

  const addToCart = useCallback((product: Product) => {
    const newCart = [...cart, product];
    localStorage.setItem('cart', JSON.stringify(newCart));
    setCart(newCart);
  }, [cart])
  
  const removeFromCart = useCallback((id: Product['id']) => {
    const newCart = cart.filter((_product) => _product.id !== id);
    localStorage.setItem('cart', JSON.stringify(newCart));
    setCart(newCart);
  }, [cart])

  const restItem = useCallback((id: Product['id']) => {
    const newCart = [...cart];
    const productIndex = newCart.findIndex((_product) => _product.id === id);
    const productExistsInCart = productIndex > -1;

    if (!productExistsInCart) return

    newCart.splice(productIndex, 1);
    localStorage.setItem('product', JSON.stringify(newCart));
    setCart(newCart)
  }, [cart])

  const sumItem = useCallback((id: Product['id']) => {
    const newCart = [...cart];
    const productIndex = newCart.findIndex((_product) => _product.id === id);
    const productExistsInCart = productIndex > -1;

    if (!productExistsInCart) return
    
    newCart.push(newCart[productIndex]);
    localStorage.setItem('product', JSON.stringify(newCart));
    setCart(newCart)
  }, [cart])

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header
        cart={cart}
        removeFromCart={removeFromCart}
        restItem={restItem}
        sumItem={sumItem}
        checkout={() => alert('Checkout ðŸ’¸')}
      />

      <main>
        <Hero />
        <Products productList={PRODUCT_LIST} onAddToCart={addToCart} />
      </main>
    </div>
  );
}
